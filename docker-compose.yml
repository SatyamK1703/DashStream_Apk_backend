# Docker Compose configuration for DashStream
version: '3.8'

services:
  # Main API service
  dashstream-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: dashstream-api
    restart: unless-stopped
    ports:
      - "${PORT:-5000}:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    depends_on:
      - mongodb
      - redis
    networks:
      - dashstream-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # MongoDB service (for local development)
  mongodb:
    image: mongo:6.0
    container_name: dashstream-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: dashstream
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - dashstream-network
    command: mongod --auth

  # Redis service (for session storage and caching)
  redis:
    image: redis:7-alpine
    container_name: dashstream-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-password}
    volumes:
      - redis_data:/data
    networks:
      - dashstream-network
    command: redis-server --requirepass ${REDIS_PASSWORD:-password}
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: dashstream-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - dashstream-api
    networks:
      - dashstream-network
    profiles:
      - production

  # Log management
  fluentd:
    build:
      context: ./docker/fluentd
      dockerfile: Dockerfile
    container_name: dashstream-logs
    restart: unless-stopped
    volumes:
      - ./logs:/fluentd/log
      - ./docker/fluentd/conf:/fluentd/etc
    ports:
      - "24224:24224"
    networks:
      - dashstream-network
    profiles:
      - production

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  dashstream-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16